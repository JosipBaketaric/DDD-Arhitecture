Billing:
- when shipmentProcesses are organized, send shipment info (mass, processes, origin, destination) to billing so we can create a bill:
	- create bill with item for each process and amount from price list for process, mass, origin, destination
	- on bill.publish send bill to external billing system


Scenario 1
- Transport.Import.ArrivedOnTerminal(Terminal)
	- ShipmentRoute - Done
		- ShipmentProcess.Import.ArrivedOnTerminal(Terminal) if Terminal == Ship.Destination than delivered else OnTerminal
			- If Import.Delivered than
				- if warehouse than warehouse.ArrivedOnTerminal(terminal)
					if terminal and status prepared than WarehouseReceiving					
				- if distribution than distirbution.ArriveOnTermina(terminal, warehouseStatus)
					if terminal and warehouseReceiving than WarehouseReceiving
						else OnTerminal


Scenario import - warehouse - distribution
- import insert 
	- import proces "entry"
	- if warehouse - warehouse "entry" (warehouse from warehouse terminal on shipment)
	- if destination in hr and not warehouse distribution - "entry"
	- import route - origin - warehouse
	- destination route - warehouse - destinaton
- import transport insert
	- transport "entry"
- import add shipment to transport
	- import process status "organized"
- import transport status change "Transporting"
	- import process status to "On Transport"
- import transport status change "ArrivedOnTerminal"
	- each shipment with route on transport and destination as terminal to done
		- if terminal = import.destination than "On terminal"
		- if terminal warehouse and warehouse entry - warehouse "ready for receive"
		- if distribution 
			- if terminal = distribution.from
				if warehouseReceiving than "Warehouse ready to receive"
				else "OnTerminal"
- warehouse receiving status changes
	- propagate to deistirbution
- distribution insert transport 
	- "entry"
- distribution add shipment to transport
	- distribution "organized"
	- start warehouseShipping "entry"
- warehouse transport to "OnTerminal"
	- if terminal == warhouseShipping.warehouse than warehouseShipping to "waiting on shipping"
	- if terminal == distribution.StartTerminal and distribution = organized than 
		if warehouseshipping than "warhouseShipping
		else "OnTerminal"
- warehouseshipping 
	- update statuses on distribution
- warehouse transport to "Driving"
- shipment.distribution to "Delivered"
	- import "Delivered"
	